# This is a basic workflow to help you get started with Actions

name: Terraform GitHubAction Demo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env:
       ARM_CLIENT_ID: '8b0a8e38-6974-4735-bc27-47ac25609981'
       ARM_TENANT_ID: '123c1f0c-4b78-40f7-85ea-0c6eb0792e0a'
       ARM_SUBSCRIPTION_ID: 'b7f0dec5-f64a-457e-9f79-345a9084e15a'
       ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
       AZURE_STORAGE: 'terraformdemo3421599'
       
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Azure Login
        uses: Azure/login@v1
        with:
          
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Runs a single command using the runners shell
      - name: Build Terraform State
        run: chmod +x ./tfstate.sh && ./tfstate.sh ${{ env.AZURE_STORAGE }}

      #Installs Terraform in environment
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        
      - name: Terraform init
        run: terraform init -backend-config="storage_account_name=${{ env.AZURE_STORAGE }}"
        
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        
      - name: Terraform Apply
        run: terraform apply tfplan
